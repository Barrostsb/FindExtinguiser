
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.SQLException;

import javax.swing.JOptionPane;

import dao.UsuarioDAO;

import model.Auxiliar;
import model.Encarregado;
import model.Usuario;


/**
 *
 * @author ThiMary
 */
public class frmCadastrarUsuario extends javax.swing.JFrame {
	
    // Variables declaration - do not modify
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JComboBox cboxTipoUsuario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jpDadosAcesso;
    private javax.swing.JPanel jpDadosUsuario;
    private javax.swing.JPanel jpPrincipal;
    private javax.swing.JLabel lblCPF;
    private javax.swing.JLabel lblCadUsuario;
    private javax.swing.JLabel lblUsuário;
    private javax.swing.JTextField txtCPF;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtLoginUsuario;
    private javax.swing.JTextField txtNome;
    private javax.swing.JPasswordField txtPasswdUsuario;
    // End of variables declaration
	
    /**
     * Creates new form frmUsuario
     */
    public frmCadastrarUsuario() {
    	super("Cadastrar Usuário");
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jpPrincipal = new javax.swing.JPanel();
        lblCadUsuario = new javax.swing.JLabel();
        jpDadosUsuario = new javax.swing.JPanel();
        lblCPF = new javax.swing.JLabel();
        txtCPF = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cboxTipoUsuario = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jpDadosAcesso = new javax.swing.JPanel();
        lblUsuário = new javax.swing.JLabel();
        txtLoginUsuario = new javax.swing.JTextField();
        txtPasswdUsuario = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnCadastrar = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblCadUsuario.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        lblCadUsuario.setText("CADASTRO DE USUÁRIOS");

        javax.swing.GroupLayout jpPrincipalLayout = new javax.swing.GroupLayout(jpPrincipal);
        jpPrincipal.setLayout(jpPrincipalLayout);
        jpPrincipalLayout.setHorizontalGroup(
            jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPrincipalLayout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addComponent(lblCadUsuario)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpPrincipalLayout.setVerticalGroup(
            jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCadUsuario)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jpDadosUsuario.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados do usuário"));

        lblCPF.setText("CPF");

        jLabel2.setText("Tipo de usuário");

        cboxTipoUsuario.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Auxiliar", "Encarregado" }));

        jLabel1.setText("E-Mail");

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        jLabel3.setText("Nome");

        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpDadosUsuarioLayout = new javax.swing.GroupLayout(jpDadosUsuario);
        jpDadosUsuario.setLayout(jpDadosUsuarioLayout);
        jpDadosUsuarioLayout.setHorizontalGroup(
            jpDadosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpDadosUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpDadosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(lblCPF))
                .addGap(18, 18, 18)
                .addGroup(jpDadosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCPF))
                .addGap(52, 52, 52)
                .addGroup(jpDadosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jpDadosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtEmail)
                    .addComponent(cboxTipoUsuario, 0, 137, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpDadosUsuarioLayout.setVerticalGroup(
            jpDadosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDadosUsuarioLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jpDadosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboxTipoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(27, 27, 27)
                .addGroup(jpDadosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCPF)
                    .addComponent(jLabel1)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jpDadosAcesso.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados de Acesso"));

        lblUsuário.setText("Usuário");

        txtLoginUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLoginUsuarioActionPerformed(evt);
            }
        });

        txtPasswdUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswdUsuarioActionPerformed(evt);
            }
        });

        jLabel4.setText("Senha");

        javax.swing.GroupLayout jpDadosAcessoLayout = new javax.swing.GroupLayout(jpDadosAcesso);
        jpDadosAcesso.setLayout(jpDadosAcessoLayout);
        jpDadosAcessoLayout.setHorizontalGroup(
            jpDadosAcessoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDadosAcessoLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(lblUsuário)
                .addGap(18, 18, 18)
                .addComponent(txtLoginUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(txtPasswdUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );
        jpDadosAcessoLayout.setVerticalGroup(
            jpDadosAcessoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDadosAcessoLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jpDadosAcessoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsuário)
                    .addComponent(txtLoginUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPasswdUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        btnLimpar.setText("Limpar");

        btnCancelar.setText("Cancelar");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCadastrar)
                .addGap(18, 18, 18)
                .addComponent(btnLimpar)
                .addGap(18, 18, 18)
                .addComponent(btnCancelar)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastrar)
                    .addComponent(btnLimpar)
                    .addComponent(btnCancelar))
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jpDadosAcesso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpDadosUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpDadosUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpDadosAcesso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
                
        pack();
        
        btnCadastrar.addActionListener(new btnCadastrarHandler());
        btnLimpar.addActionListener(new btnLimparHandler());
        btnCancelar.addActionListener(new btnCancelarHandler());
    }
    
    private void txtEmailActionPerformed(ActionEvent evt) {}
    private void txtNomeActionPerformed(ActionEvent evt) {}
    private void txtLoginUsuarioActionPerformed(ActionEvent evt) {}
    private void txtPasswdUsuarioActionPerformed(ActionEvent evt) {}
    private void btnCadastrarActionPerformed(ActionEvent evt) {}
    
    /**
     * Controller btnCadastrarHandler responsável 
     * pela ação de cadastrar usuário
     * @author Thiago Henrique Poiani
     */
    private class btnCadastrarHandler implements ActionListener {

    	@Override
		public void actionPerformed(ActionEvent arg0) {
    		
    		Usuario pessoa;
    		if (cboxTipoUsuario.getSelectedItem() == "Auxiliar") {
    			pessoa = new Auxiliar();
    		} else {
    			pessoa = new Encarregado();
    		}
    		
    		request(pessoa);
    		
    		try {
    			pessoa.validate();
    			UsuarioDAO business = new UsuarioDAO(pessoa);
    			business.save();
    			JOptionPane.showMessageDialog(null, "Usuario Cadstrado com Sucesso!!!", "Confirmação", JOptionPane.INFORMATION_MESSAGE);
    			clear();
    		} catch (SQLException e) {
    			// mensagem de erro de cadastro
    			javax.swing.JOptionPane.showMessageDialog(null, e.getMessage());
    		} catch (Exception e) {
    			// mensagem para validacao
    			javax.swing.JOptionPane.showMessageDialog(null, e.getMessage());
    		}
    		
    		
    		/*

	    	// conversão da senha para MD5
	    	usuario.setUsuario(txtUser.getText());
	    	usuario.setSenha(toMD5(new String(txtPasswd.getPassword())));

	        try {
				UsuarioBusiness business = new UsuarioBusiness();
				boolean result = business.autenticacao(usuario);
				
				if (result) {
					frmPrincipal formPrincipal= new frmPrincipal();
					formPrincipal.setVisible(true);
					setVisible(false);
				} else {
					// RETORNAR DIALOG DE USUARIO E SENHA ERRADO
				}
			} catch (SQLException e) {
				// RETORNAR DIALOG DE ERRO
			}
			*/
	    }
    	
    	/**
    	 * Método para atribuir ao Usuario os valores das requisições
    	 * @param pessoa
    	 */
    	private void request(Usuario pessoa) {
			pessoa.setNome(txtNome.getText());
    		pessoa.setCpf(txtCPF.getText());
    		
    		/*
    		if (pessoa instanceof Auxiliar) {
    			pessoa.setTipo('a');
    		} else {
    			pessoa.setTipo('e');
    		}
    		*/
    		
    		pessoa.setEmail(txtEmail.getText());
    		pessoa.setUsuario(txtLoginUsuario.getText());
    		pessoa.setSenha(toMD5(new String(txtPasswdUsuario.getPassword())));
    		pessoa.setStatus('a');
    	}
    	
    	/**
    	 * Método para conversão de string em MD5
    	 * @param senha textPasswd
    	 * @return String MD5
    	 */
    	private String toMD5(String senha) {
    		MessageDigest hash = null;
			try {
				hash = MessageDigest.getInstance("MD5");
				hash.update(senha.getBytes(), 0, senha.length());
			} catch (NoSuchAlgorithmException e) {
				// RETORNAR DIALOG DE ERRO 
			}
    		return new BigInteger(1, hash.digest()).toString(16);
    	}
    }
    
	
    
    /**
     * Controller btnLimparHandler responsável pela 
     * ação de limpar os campos de cadastro de usuário
     * @author Thiago Henrique Poiani
     */
    private class btnLimparHandler implements ActionListener {

		@Override
		public void actionPerformed(ActionEvent arg0) {
			clear();
		}
    	
    }
    
    /**
     * Controller btnCancelarHandler responsável 
     * por fechar a tela de cadastro de usuário 
     * e retornar ao Form Principal
     * @author Thiago Henrique Poiani
     */
    private class btnCancelarHandler implements ActionListener {
		
    	@Override
		public void actionPerformed(ActionEvent arg0) {
    		dispose();
			new frmPrincipal().setVisible(true);		
		}
		
    }
    
    /**
     * metodo para limpar 
     * campos de cadastro
     */
    
    private void clear(){
		txtNome.setText("");
		txtCPF.setText("");
		cboxTipoUsuario.setSelectedIndex(0);
		txtEmail.setText("");
		txtLoginUsuario.setText("");
		txtPasswdUsuario.setText("");
	}
}