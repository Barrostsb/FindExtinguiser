package GUI;

import itext.PortableDocumentFormat;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;

import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

import model.Extintor;

import dao.ExtintorDAO;

/**
*
* @author ThiMary
*/
public class frmRelatorio extends javax.swing.JFrame {

	
	// Variables declaration - do not modify
	   private javax.swing.JTable JtblExtintoresCadastrados;
	   private javax.swing.JButton btnCancelar;
	   private javax.swing.JButton btnImportar;
	   private javax.swing.JButton btnImprimir;
	   private javax.swing.JComboBox cBoxTipo;
	   private javax.swing.JComboBox jComboBox1;
	   private javax.swing.JLabel jLabel2;
	   private javax.swing.JLabel jLabel3;
	   private javax.swing.JPanel jPanel1;
	   private javax.swing.JScrollPane jScrollPane1;
	   private javax.swing.JPanel jpDadosExtintor;
	   private javax.swing.JLabel lblCadExtintor;
	   private ExtintorDAO business;
	   // End of variables declaration
   /**
    * Creates new form frmRelatorio
    */
   public frmRelatorio() {
	   try {
		   business = new ExtintorDAO(new Extintor());
	   } catch (SQLException e) {
		// erro de banco de dados
		   JOptionPane.showMessageDialog(null, "Ocorreu algum erro interno. Tente novamente mais tarde.", "Erro", JOptionPane.ERROR_MESSAGE);
	   }
       initComponents();
       ImageIcon img = new ImageIcon("./image/icon.png");
       this.setIconImage(img.getImage());
   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">
   private void initComponents() {

       btnImportar = new javax.swing.JButton();
       btnCancelar = new javax.swing.JButton();
       lblCadExtintor = new javax.swing.JLabel();
       btnImprimir = new javax.swing.JButton();
       jpDadosExtintor = new javax.swing.JPanel();
       jPanel1 = new javax.swing.JPanel();
       jScrollPane1 = new javax.swing.JScrollPane();
       JtblExtintoresCadastrados = new javax.swing.JTable(){
    	   public boolean isCellEditable(int row, int column) {                
               return false;  
    	   };
       };
       JtblExtintoresCadastrados.getTableHeader().setReorderingAllowed(false);
       jLabel3 = new javax.swing.JLabel();
       jComboBox1 = new javax.swing.JComboBox();
       jLabel2 = new javax.swing.JLabel();
       cBoxTipo = new javax.swing.JComboBox();

       setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

       btnImportar.setText("Importar");

       btnCancelar.setText("Cancelar");

       lblCadExtintor.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
       lblCadExtintor.setText("RELATÓRIO DE EXTINTORES");

       btnImprimir.setText("Imprimir");

       jpDadosExtintor.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

       jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Extintores Cadastrados"));

       populateJTable(null, null);
       
       jScrollPane1.setViewportView(JtblExtintoresCadastrados);

       javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
       jPanel1.setLayout(jPanel1Layout);
       jPanel1Layout.setHorizontalGroup(
           jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
           .addGroup(jPanel1Layout.createSequentialGroup()
               .addContainerGap()
               .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 781, Short.MAX_VALUE)
               .addContainerGap())
       );
       jPanel1Layout.setVerticalGroup(
           jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
           .addGroup(jPanel1Layout.createSequentialGroup()
               .addContainerGap()
               .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addContainerGap(63, Short.MAX_VALUE))
       );

       jLabel3.setText("Pesquisa Por tipo de Extintor");

       jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3"}));

       jLabel2.setText("Pesquisar por tipo");

       cBoxTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Água", "CO2", "Pó Químico", "Espuma Mecânica" }));

       javax.swing.GroupLayout jpDadosExtintorLayout = new javax.swing.GroupLayout(jpDadosExtintor);
       jpDadosExtintor.setLayout(jpDadosExtintorLayout);
       jpDadosExtintorLayout.setHorizontalGroup(
           jpDadosExtintorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
           .addGroup(jpDadosExtintorLayout.createSequentialGroup()
               .addContainerGap()
               .addGroup(jpDadosExtintorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                   .addGroup(jpDadosExtintorLayout.createSequentialGroup()
                       .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                       .addContainerGap())
                   .addGroup(jpDadosExtintorLayout.createSequentialGroup()
                       .addGap(101, 101, 101)
                       .addComponent(jLabel3)
                       .addGap(36, 36, 36)
                       .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                       .addGap(88, 88, 88)
                       .addComponent(jLabel2)
                       .addGap(35, 35, 35)
                       .addComponent(cBoxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                       .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
       );
       jpDadosExtintorLayout.setVerticalGroup(
           jpDadosExtintorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
           .addGroup(jpDadosExtintorLayout.createSequentialGroup()
               .addGap(17, 17, 17)
               .addGroup(jpDadosExtintorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                   .addComponent(jLabel3)
                   .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                   .addComponent(jLabel2)
                   .addComponent(cBoxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
               .addGap(18, 18, 18)
               .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addContainerGap())
       );

       javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
       getContentPane().setLayout(layout);
       layout.setHorizontalGroup(
           layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
           .addGroup(layout.createSequentialGroup()
               .addContainerGap()
               .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                   .addComponent(jpDadosExtintor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                   .addGroup(layout.createSequentialGroup()
                       .addComponent(btnCancelar)
                       .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                       .addComponent(btnImportar)
                       .addGap(32, 32, 32)
                       .addComponent(btnImprimir)))
               .addContainerGap())
           .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
               .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addComponent(lblCadExtintor)
               .addGap(257, 257, 257))
       );
       layout.setVerticalGroup(
           layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
           .addGroup(layout.createSequentialGroup()
               .addGap(19, 19, 19)
               .addComponent(lblCadExtintor)
               .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addComponent(jpDadosExtintor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addGap(24, 24, 24)
               .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                   .addComponent(btnCancelar)
                   .addComponent(btnImportar)
                   .addComponent(btnImprimir))
               .addGap(22, 22, 22))
       );

       pack();
       
       btnCancelar.addActionListener(new CancelarHandler());
       btnImprimir.addActionListener(new ImprimirHandler());
   }// </editor-fold>
   
   /**
    * Método para popular JTable com extintores
    * @param search pesquisa livre
    * @param column combobox
    */
   private void populateJTable(String search, String column) {
       try {
    	   // vetor de string
    	   Vector<Vector<String>> results;
    	   
    	   if (search == null && column == null) {
    		   // resultados sem pesquisa livre e combobox
    		   results = business.read();   
    	   } else {
    		   if (column == null) {
    			   // resultados da pesquisa livre
    			   results = business.read(search);   
    		   } else {
    			   // resultados da pesquisa livre e combobox
    			   results = business.read(search, column);
    		   }
    	   }
    	   
    	   // vetor de string para receber o cabeçalho do JTable 
    	   Vector<String> header = new Vector<String>();
    	   header.add("ID");
    	   header.add("CÓDIGO");
    	   header.add("TIPO");
    	   header.add("CAPACIDADE");
    	   header.add("ÚLTIMA MANUTENÇÃO");
    	   
    	   // popula JTable com resultados e cabeçalho
    	   JtblExtintoresCadastrados.setModel(new javax.swing.table.DefaultTableModel(results, header));
    	   
    	   // esconder a coluna ID
    	   JtblExtintoresCadastrados.getColumnModel().getColumn(0).setMaxWidth(0);
    	   JtblExtintoresCadastrados.getColumnModel().getColumn(0).setMinWidth(0);
    	   JtblExtintoresCadastrados.getColumnModel().getColumn(0).setPreferredWidth(0);
           
       } catch (SQLException e) {
    	   JtblExtintoresCadastrados.setModel(new javax.swing.table.DefaultTableModel());
       }
   }
   
   /**
    * Controller PesquisarHandler responsável pela 
    * ação de pesquisar extintores do banco de dados
    */
   /*
   private class PesquisarHandler implements ActionListener {
      @Override
	   public void actionPerformed(ActionEvent e) {
		   
		   // sem usuario específico marcado na combobox
		   if (cBoxTipo.getSelectedIndex() == 0) {
		       // pesquisa livre 
			   populateJTable(txtPesquisa.getText(), null);
		   } else {
		   	   // pesquisa combobox
			   String tipo = "";
			   switch ((String)cBoxTipo.getSelectedItem()) {
		    		case "Água" : tipo = "a"; break;
		    		case "CO2" : tipo = "c"; break;
		    		case "Espuma Mecânica" : tipo = "e"; break;
		    		case "Pó Químico" : tipo = "p"; break;
		    	}
			   
			   populateJTable(tipo, "tipo");
		   }
	   }
   }
   */
   
   private class CancelarHandler implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			new frmPrincipal().setVisible(true);
			dispose();
		}
	   
   }

   private class ImprimirHandler implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			int id;
			
			try {
				// retorna o valor da primeira coluna da linha selecionada
				id = Integer.valueOf((String) JtblExtintoresCadastrados.getValueAt(JtblExtintoresCadastrados.getSelectedRow(), 0));
			} catch (Exception e1) {
				javax.swing.JOptionPane.showMessageDialog(null, "Nenhum extintor selecionado!");
				return;
			}
			
			// popula usuario com os dados
			Extintor extintor = (Extintor) business.find("Extintor", id);
			
			business.storage("SELECT data, tipo, local FROM manutencao WHERE id_extintor = " + extintor.getId());
			ResultSet result = business.execute();
			
			PortableDocumentFormat pdf = new PortableDocumentFormat(extintor, result);
			pdf.salvar();
			pdf.finalize();
		}
   }   
}
